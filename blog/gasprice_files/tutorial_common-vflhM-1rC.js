// Generated by CoffeeScript 1.3.3
var NavBubble, TutorialBanner, TutorialLogger, TutorialModal,
  _this = this;

TutorialModal = {
  show: function(title, subtitle, image_src, image_desc, body, options) {
    var button_container, cancel_button, has_cancel_button, has_ok_button, modal_body, modal_content, modal_image, modal_title, ok_button;
    if (options == null) {
      options = {};
    }
    modal_title = new Element("div", {
      id: "tutorial-modal-title"
    });
    modal_title.__sert(title);
    modal_content = new Element("div", {
      id: "tutorial-modal-content"
    });
    modal_image = new Element("img", {
      id: "tutorial-modal-image",
      src: image_src,
      alt: image_desc.escapeHTML()
    });
    modal_body = new Element("div", {
      id: "tutorial-modal-body"
    });
    modal_body.update(body);
    modal_content.__sert({
      bottom: modal_image
    });
    modal_content.__sert({
      bottom: modal_body
    });
    has_ok_button = options.ok_button_text && options.ok_button_handler;
    has_cancel_button = options.cancel_button_text && options.cancel_button_handler;
    if (has_ok_button || has_cancel_button) {
      button_container = new Element("div", {
        id: "tutorial-modal-button-container"
      });
      if (has_ok_button) {
        ok_button = new Element("a", {
          id: "tutorial-modal-button-ok",
          "class": "tutorial-modal-button freshbutton-blue"
        });
        ok_button.observe("click", function() {
          delete Modal.onHide;
          return options.ok_button_handler();
        });
        ok_button.__sert(options.ok_button_text);
        button_container.__sert({
          bottom: ok_button
        });
      }
      if (has_cancel_button) {
        cancel_button = new Element("a", {
          id: "tutorial-modal-button-cancel",
          "class": "tutorial-modal-button freshbutton-gray"
        });
        cancel_button.observe("click", function() {
          delete Modal.onHide;
          return options.cancel_button_handler();
        });
        cancel_button.__sert(options.cancel_button_text);
        button_container.__sert({
          bottom: cancel_button
        });
      }
      modal_content.__sert({
        bottom: button_container
      });
    }
    Modal.show(modal_title, modal_content, {}, false, 600);
    if (options.on_hide) {
      return Modal.onHide = options.on_hide;
    }
  },
  loading: function() {
    return Forms.add_loading($("tutorial-modal-button-ok"));
  }
};

TutorialBanner = {
  BANNER_HEIGHT: 65,
  show: function(heading, exit_button_click_handler) {
    var banner, banner_content, banner_content_button, banner_content_heading, browse_header, browse_header_top_new, browse_header_top_old, button_text, outer_frame, page_sidebar, page_sidebar_top_new, page_sidebar_top_old;
    if ($("page-banner")) {
      return;
    }
    button_text = _("Exit tutorial");
    banner = new Element("div", {
      id: "page-banner"
    });
    banner.setStyle({
      height: this.BANNER_HEIGHT + "px"
    });
    outer_frame = $("outer-frame");
    outer_frame.__sert({
      top: banner
    });
    banner_content = new Element("div", {
      id: "page-banner-content"
    });
    banner_content_heading = new Element("h1");
    banner_content_heading.__sert({
      bottom: heading
    });
    banner_content_button = new Element("a", {
      id: "page-banner-button",
      "class": "freshbutton-gray",
      href: ""
    });
    banner_content_button.__sert(_("Exit tutorial"));
    banner_content_button.observe("click", exit_button_click_handler);
    banner_content_heading.__sert({
      bottom: banner_content_button
    });
    banner_content.__sert(banner_content_heading);
    $(document.body).__sert({
      top: banner_content
    });
    $("page-banner-content").setStyle({
      height: (this.BANNER_HEIGHT - 40) + "px"
    });
    $("page-header").setStyle({
      top: this.BANNER_HEIGHT + "px"
    });
    page_sidebar = $("page-sidebar");
    page_sidebar_top_old = parseInt(page_sidebar.getStyle("top"), 10);
    page_sidebar_top_new = page_sidebar_top_old + this.BANNER_HEIGHT;
    page_sidebar.setStyle({
      top: page_sidebar_top_new + "px"
    });
    $("browse-box").setStyle({
      paddingTop: this.BANNER_HEIGHT + "px"
    });
    browse_header = $("browse-header");
    browse_header_top_old = parseInt(browse_header.getStyle("top"), 10);
    browse_header_top_new = browse_header_top_old + this.BANNER_HEIGHT;
    return browse_header.setStyle({
      top: browse_header_top_new + "px"
    });
  },
  dark_page: function() {
    return $("page-banner-content").setStyle({
      "box-shadow": "0 0 3px 0 #555"
    });
  },
  light_page: function() {
    return $("page-banner-content").setStyle({
      "box-shadow": "0 0 3px 0 #ccc"
    });
  }
};

NavBubble = {
  BUBBLE_TAIL_OFFSET: 32,
  make: function(title, body, button_text, button_handler, button_class, x_handler, tail_side, tail_position, width, nav_bubble_options) {
    var bubble, bubble_content, bubble_dom, tmpl, x_button, x_img, x_link;
    nav_bubble_options = nav_bubble_options || {};
    tmpl = HTML.tmpl('tutorial_nav_bubble_tmpl');
    bubble_content = tmpl({
      title: title,
      body: body,
      button_text: button_text,
      button_class: button_class
    });
    bubble_dom = Bubble.make(bubble_content, tail_side, tail_position, width, {
      style: 'titled'
    });
    bubble = $j(bubble_dom);
    x_img = bubble.find('.tutorial-bubble-x-img');
    x_img.on('mousedown', function() {
      return x_img.attr('src', '/static/images/x-small-pressed.png');
    });
    x_img.on('mouseout', function() {
      return x_img.attr('src', '/static/images/x-small-active.png');
    });
    x_link = bubble.find('.tutorial-bubble-x-link');
    x_link.on('click', function(event) {
      return typeof x_handler === "function" ? x_handler(event) : void 0;
    });
    x_button = bubble.find('.tutorial-bubble-button');
    x_button.on('click', function(event) {
      return typeof button_handler === "function" ? button_handler(event) : void 0;
    });
    if (nav_bubble_options.hide_x) {
      bubble.find('.tutorial-bubble-x-link').hide();
    }
    if (nav_bubble_options.hide_title) {
      bubble.find('.tutorial-bubble-title').hide();
    }
    if (nav_bubble_options.hide_body) {
      bubble.find('.tutorial-bubble-body').hide();
    }
    if (nav_bubble_options.hide_button) {
      bubble.find('.tutorial-bubble-button').hide();
    }
    return bubble_dom;
  }
};

TutorialLogger = {
  log: function(tutorial, event, revision, on_complete) {
    var url;
    if (on_complete == null) {
      on_complete = null;
    }
    url = window.location.href;
    return new Ajax.DBRequest("/tutlog", {
      method: "post",
      noAutonotify: true,
      parameters: {
        tutorial: tutorial,
        event: event,
        url: url,
        revision: revision
      },
      onComplete: function(transport) {
        if (on_complete != null) {
          return on_complete();
        }
      }
    });
  }
};
